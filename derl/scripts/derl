""" Generic derl script to launch a learner. """
#!/usr/bin/env python3
from argparse import ArgumentParser
import tensorflow as tf
import derl
tf.enable_eager_execution()


def get_learners():
  """ Returns learner name to learner class mapping. """
  return {
      k[:-len("Learner")].lower().replace("_", "-"): getattr(derl, k)
      for k in dir(derl) if k != "Learner" and k.endswith("Learner")
  }


def main():
  """ Script entry point. """
  parser = ArgumentParser()
  learners = get_learners()
  parser.add_argument("learner", choices=list(learners.keys()))
  args, unknown_args = parser.parse_known_args()
  learner_class = learners[args.learner]

  args = derl.get_args(
      atari_defaults=learner_class.get_parser_defaults("atari"),
      mujoco_defaults=learner_class.get_parser_defaults("mujoco"),
      args=unknown_args)

  kwargs = vars(args)
  env = derl.env.make(args.env_id, kwargs.get("nenvs"), kwargs.get("seed"))
  learner = learner_class.make_with_args(env, args)
  learner.learn(args.logdir, args.log_period)


if __name__ == "__main__":
  main()
